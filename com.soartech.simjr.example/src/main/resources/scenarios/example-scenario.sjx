<?xml version="1.0" encoding="UTF-8"?>
<simjr:scenario xmlns:simjr="http://simjr.soartech.com/schema/scenario/1.0" simjr:version="1.0">
  <simjr:metadata>
    <simjr:name>Example Scenario with Custom Shapes</simjr:name>
    <simjr:description />
  </simjr:metadata>
  <simjr:terrain>
    <simjr:origin simjr:latitude="0.0" simjr:longitude="0.0" simjr:altitude="0.0" />
  </simjr:terrain>
  <simjr:entities>
    <simjr:entity simjr:name="a" simjr:prototype="waypoint" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="-9.948064240746172E-5" simjr:longitude="-0.002111040916725611" simjr:altitude="0.0" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    <simjr:entity simjr:name="b" simjr:prototype="waypoint" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="3.7079148512782114E-4" simjr:longitude="0.002802743685012859" simjr:altitude="1.862645149230957E-9" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    <simjr:entity simjr:name="a-b" simjr:prototype="route" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="0.0" simjr:longitude="0.0" simjr:altitude="0.0" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points>
        <simjr:point simjr:name="a" />
        <simjr:point simjr:name="b" />
      </simjr:points>
    </simjr:entity>
    <simjr:entity simjr:name="truck" simjr:prototype="truck" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="6.873208023510767E-4" simjr:longitude="-0.0012845908560756728" simjr:altitude="0.0" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
    logger.info("Created entity " + self.name);

    simjr.entities.capabilities.add(self,
		new Packages.com.soartech.simjr.example.HelloWorldBehavior(),  
		{
			radioHistory: Packages.com.soartech.simjr.radios.RadioHistory.findService(services)
		});
    simjr.entities.capabilities.add(self,
		new Packages.com.soartech.simjr.controllers.RouteFollower(),  
		{
			route: "a-b"
		});</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    
    <simjr:entity simjr:name="example-existing-shape" simjr:prototype="example-existing-shape" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="-5.7079E-4" simjr:longitude="-0.0020" simjr:altitude="1.86E-9" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
		logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    
    <simjr:entity simjr:name="example-custom-shape" simjr:prototype="example-custom-shape" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="-6.7079E-4" simjr:longitude="-0.0008" simjr:altitude="1.86E-9" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
		logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    
    <simjr:entity simjr:name="example-existing-image" simjr:prototype="example-existing-image" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="-7.7079E-4" simjr:longitude="0.0006" simjr:altitude="1.86E-9" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
		logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    
    <simjr:entity simjr:name="example-custom-image" simjr:prototype="example-custom-image" simjr:force="friendly" simjr:visible="true">
      <simjr:location>
        <simjr:lla simjr:latitude="-8.7079E-4" simjr:longitude="0.0020" simjr:altitude="1.86E-9" />
      </simjr:location>
      <simjr:orientation simjr:heading="0.0" simjr:roll="0.0" simjr:pitch="0.0" />
      <simjr:initScript simjr:type="text/javascript">// Refer to newly created entity with 'self'
		logger.info("Created entity " + self.name);</simjr:initScript>
      <simjr:points />
    </simjr:entity>
    
  </simjr:entities>
  
  <simjr:preLoadScript simjr:type="text/javascript">
  
    // Commonly used imports and scripts
    importPackage(Packages.com.soartech.simjr.controllers);
    importPackage(Packages.com.soartech.simjr.web);
    requireScript("ui");
    requireScript("terrain");
    requireScript("polygons");
    requireScript("weapons");

    // Set up any necessary services using methods in the the example common.js script
    //
    // NOTE: This only needs to be done in the scenario file here if there isn't a 
    //       ServiceProvider implemented for the service. 
    //      
    //       In the case of the ExampleShapeManager there is already one implemented
    //       as the class ShapeManagerServiceProvider. It is mapped using Java SPI
    //       in the META-INF/services folder.
    //
    //       While the above Java SPI approach is preferred, this is still included here 
    //       as an example of another way to do it. This way is better than Java SPI if the 
    //       scenario needs to load when Sim Jr starts.
    //
    requireScript("example");
    initExampleServices(services);
    
  </simjr:preLoadScript>

  <simjr:postLoadScript simjr:type="text/javascript">
    // createCheatSheet(); // load cheatsheet.html
    getActivePlanViewDisplay().getView().showAll();
  </simjr:postLoadScript>
  
</simjr:scenario>

